{"version":3,"sources":["hocs/ProtectedRoute/ProtectedRoute.tsx","components/Login/lib/validate.ts","components/Login/Login.tsx","components/Main/Main.tsx","components/App/App.tsx","index.tsx"],"names":["ProtectedRoute","Component","component","isLoggedIn","path","rest","exact","to","validate","values","errors","username","password","Login","onLogin","onSubmit","useCallback","evt","LoginButton","pristine","hasValidationErrors","submitting","useMemo","htmlType","type","size","disabled","Math","random","style","height","render","handleSubmit","name","input","meta","help","touched","error","validateStatus","undefined","width","Password","Title","Typography","Main","onSignout","justifyContent","direction","danger","onClick","React","memo","SECRET_KEY","App","useState","setIsLoggedIn","history","useHistory","handleLogin","trim","localStorage","setItem","push","Modal","title","handleSignout","removeItem","info","loginCheck","token","getItem","useEffect","className","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c148ccfc.chunk.js","sourcesContent":["import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\ninterface ProtectedRouteProps {\n  component: any;\n  isLoggedIn: boolean;\n  path: string;\n}\n\nconst ProtectedRoute: React.FC<ProtectedRouteProps | any> = ({\n  component: Component,\n  isLoggedIn,\n  path,\n  ...rest\n}: ProtectedRouteProps) => {\n  return (\n    <Route exact path={path}>\n      {() => (isLoggedIn ? <Component {...rest} /> : <Redirect to='/signin' />)}\n    </Route>\n  );\n};\n\nexport default ProtectedRoute;\n","interface validateValues extends React.FormEvent<Element> {\n  username: string;\n  password: string;\n}\ninterface validateErrors {\n  username?: string;\n  password?: string;\n}\n\nconst validate = (values: validateValues): validateErrors => {\n  const errors: validateErrors = {};\n  if (!values.username) {\n    errors.username = 'Необходимо заполнить!';\n  }\n  if (!values.password) {\n    errors.password = 'Необходимо заполнить!';\n  }\n\n  return errors;\n};\n\nexport default validate;\n","import React, { useMemo, useCallback } from 'react';\nimport 'antd/dist/antd.css';\nimport { Button, Input, Space, Typography } from 'antd';\nimport { Form, Field } from 'react-final-form';\nimport FormItem from 'antd/lib/form/FormItem';\nimport { handleLoginProps } from '../../interfaces/handleLoginProps';\nimport validate from './lib/validate';\n\ninterface submitValues {\n  username: string;\n  password: string;\n}\ninterface LoginProps {\n  onLogin: ({ username, password }: handleLoginProps) => void;\n}\n\nconst Login: React.FC<LoginProps> = ({ onLogin }) => {\n  const onSubmit = useCallback((evt: submitValues): void => {\n    const { username, password } = evt;\n\n    onLogin({\n      username,\n      password,\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const LoginButton = (pristine: boolean, hasValidationErrors: boolean, submitting: boolean) =>\n    useMemo(\n      () => (\n        <Button\n          htmlType='submit'\n          type='primary'\n          size='large'\n          disabled={pristine || hasValidationErrors || submitting}\n        >\n          Войти\n          {Math.random()}\n        </Button>\n      ),\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      [hasValidationErrors, submitting]\n    );\n\n  return (\n    <Space style={{ height: '100vh' }}>\n      <Form\n        onSubmit={onSubmit}\n        validate={validate}\n        render={({ handleSubmit, pristine, hasValidationErrors, submitting }) => (\n          <form onSubmit={handleSubmit}>\n            <div>\n              <Typography>username</Typography>\n              <Field name='username'>\n                {({ input, meta }) => (\n                  <FormItem\n                    help={meta.touched && meta.error && meta.error}\n                    validateStatus={meta.touched ? (meta.error ? 'error' : 'success') : undefined}\n                  >\n                    <Input size='large' style={{ width: '330px' }} {...input} />\n                  </FormItem>\n                )}\n              </Field>\n            </div>\n            <div>\n              <Typography>password</Typography>\n              <Field\n                name='password'\n                render={({ input, meta }) => (\n                  <FormItem\n                    help={meta.touched && meta.error && meta.error}\n                    validateStatus={meta.touched ? (meta.error ? 'error' : 'success') : undefined}\n                  >\n                    <Input.Password size='large' style={{ width: '330px' }} {...input} />\n                  </FormItem>\n                )}\n              />\n            </div>\n            {LoginButton(pristine, hasValidationErrors, submitting)}\n          </form>\n        )}\n      />\n    </Space>\n  );\n};\n\nexport default Login;\n","import React from 'react';\nimport 'antd/dist/antd.css';\n\nimport { Button, Space, Typography } from 'antd';\nconst { Title } = Typography;\n\ninterface IMainProps {\n  onSignout: () => void;\n}\n\nconst Main: React.FC<IMainProps> = ({ onSignout }): JSX.Element => {\n  return (\n    <Space\n      style={{\n        height: '100vh',\n        justifyContent: 'center',\n      }}\n      direction='vertical'\n    >\n      <Title type='success'>Вы авторизованы!</Title>\n      <Button danger onClick={onSignout} size='large'>\n        Выйти\n      </Button>\n    </Space>\n  );\n};\n\nexport default React.memo(Main);\n","import { useState, useEffect, useCallback } from 'react';\nimport { Switch, Route, Redirect, useHistory } from 'react-router-dom';\nimport ProtectedRoute from '../../hocs/ProtectedRoute/ProtectedRoute';\nimport Login from '../Login/Login';\nimport Main from '../Main/Main';\nimport './App.css';\nimport { handleLoginProps } from '../../interfaces/handleLoginProps';\nimport { Modal } from 'antd';\n\nconst SECRET_KEY = 'testkey';\n\nconst App: React.FC = (): JSX.Element => {\n  const [isLoggedIn, setIsLoggedIn] = useState<boolean>(false);\n  const history = useHistory();\n\n  const handleLogin = useCallback(\n    ({ username, password }: handleLoginProps): void => {\n      if (username.trim() === 'user' && password.trim() === 'user') {\n        localStorage.setItem('token', SECRET_KEY);\n        setIsLoggedIn(true);\n        history.push('/main');\n      } else {\n        Modal.error({\n          title: 'Вы ввели неверные данные для входа',\n        });\n      }\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []\n  );\n\n  const handleSignout = useCallback((): void => {\n    localStorage.removeItem('token');\n    setIsLoggedIn(false);\n    Modal.info({\n      title: 'Вы успешно вышли из системы',\n    });\n    history.push('/signin');\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const loginCheck = useCallback((): void => {\n    const token = localStorage.getItem('token');\n\n    if (token) {\n      const isTokenCorrect = token === SECRET_KEY;\n\n      if (isTokenCorrect) {\n        setIsLoggedIn(true);\n        history.push('/main');\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    loginCheck();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div className='App'>\n      <Switch>\n        <Route path='/signin'>\n          <Login onLogin={handleLogin} />\n        </Route>\n        <ProtectedRoute\n          path='/main'\n          component={Main}\n          isLoggedIn={isLoggedIn}\n          onSignout={handleSignout}\n        />\n        <Route path='/*'>{isLoggedIn ? <Redirect to='/main' /> : <Redirect to='/signin' />}</Route>\n      </Switch>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}